% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/extract_events.R
\name{extract_events}
\alias{extract_events}
\title{Extract detected events and writes them to a sound file}
\usage{
extract_events(
  threshold_detection,
  buffer = 1,
  format = c("wav", "mp3"),
  path,
  LPF = NULL,
  HPF = NULL
)
}
\arguments{
\item{threshold_detection}{either class threshold_detection or path to audacity marks}

\item{buffer}{Buffer in seconds added to before and after the event (default 1). Controls also the detection of overlapping events.}

\item{format}{audio format. Supported are \code{'wav'} and \code{'mp3'}}

\item{path}{where to look up the sound file}

\item{LPF}{integer. Low-Pass Filter (Hz). Frequencies above the cutoff are greatly attenuated.
Default is set internally at the Nyquist frequency of the recording.}

\item{HPF}{integer. High-Pass Filter (Hz). Frequencies below the cutoff are greatly attenuated.
Default setting is 16000 Hz. A default of 1000 Hz is recommended for most bird vocalizations.}
}
\value{
data frame
}
\description{
Uses audacity labels, either obtained from a text file created with \code{\link[seewave]{write.audacity}} or an object of class \code{\link[bioacoustics]{threshold_detection}} to extract audio events from the original sound file.
}
\examples{
# example code
\dontrun{
path <- system.file("extdata", "20211220_064253.wav", package = "NocMigR2")
TD <- find_events(
wav.file = path,
audacity = FALSE, # Write audacity labels
threshold = 8, # SNR in db
min_dur = 20, # min length in ms
max_dur = 300, # max length in ms
LPF = 5000, # low-pass filter at 500
HPF = 1000)

extract_events(threshold_detection = TD,
path = "PATH TO FILE",
format = "wav",
LPF = 4000,
HPF = 1000,
buffer = 1)

}

}
